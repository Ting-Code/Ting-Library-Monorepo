$screen-widths: (
  XS: 576px,
  SM: 768px,
  MD: 992px,
  LG: 1300px,
  XL: 2000px,
  XXL: 2600px
);

@function get-breakpoint($key) {
  $val: map-get($screen-widths, $key);
  @if $val == null {
    @error "❌ 未知断点 `#{$key}`，请检查名称是否拼错。";
  }
  @return $val;
}

@mixin screen-at($type, $key) {
  $bp: get-breakpoint($key);

  @if $type == max {
    @media screen and (max-width: $bp) {
      @content;
    }
  } @else if $type == min {
    @media screen and (min-width: $bp) {
      @content;
    }
  } @else {
    @error "❌ `screen-at` 参数错误：必须为 `max` 或 `min`。";
  }
}

@mixin between($min-key, $max-key) {
  $min: get-breakpoint($min-key);
  $max: get-breakpoint($max-key);
  @media screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin max-XS {
  @include screen-at(max, XS) {
    @content;
  }
}
@mixin max-SM {
  @include screen-at(max, SM) {
    @content;
  }
}
@mixin max-MD {
  @include screen-at(max, MD) {
    @content;
  }
}
@mixin max-LG {
  @include screen-at(max, LG) {
    @content;
  }
}
@mixin max-XL {
  @include screen-at(max, XL) {
    @content;
  }
}
@mixin max-XXL {
  @include screen-at(max, XXL) {
    @content;
  }
}

@mixin min-XS {
  @include screen-at(min, XS) {
    @content;
  }
}
@mixin min-SM {
  @include screen-at(min, SM) {
    @content;
  }
}
@mixin min-MD {
  @include screen-at(min, MD) {
    @content;
  }
}
@mixin min-LG {
  @include screen-at(min, LG) {
    @content;
  }
}
@mixin min-XL {
  @include screen-at(min, XL) {
    @content;
  }
}
@mixin min-XXL {
  @include screen-at(min, XXL) {
    @content;
  }
}
